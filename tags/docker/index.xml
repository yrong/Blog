<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on yrong blog</title>
    <link>https://yrong.github.io/blog/tags/docker/</link>
    <description>Recent content in Docker on yrong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>yrong@ustc.edu (Ronyang)</managingEditor>
    <webMaster>yrong@ustc.edu (Ronyang)</webMaster>
    <copyright>&amp;copy; Copyright 2017 Ronyang</copyright>
    <lastBuildDate>Mon, 27 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yrong.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build a NodeJS microservice and deploy it to Docker</title>
      <link>https://yrong.github.io/blog/2017/03/27/docker-microservice/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      <author>yrong@ustc.edu (Ronyang)</author>
      <guid>https://yrong.github.io/blog/2017/03/27/docker-microservice/</guid>
      <description>Build a NodeJS microservice and deploy it to Docker Stack Weâ€™ll use a simple NodeJS service with a MongoDB for our backend.
 NodeJS 7.5.0 MongoDB 3.4.2 Docker for Mac 1.13.0  Architecture Microservices  Movies Service example Cinema Catalog Service example Booking Service example Payment Service example Notification Service example API Gateway Service example  Api Gateway  An API Gateway is a server that is the single entry point into the system.</description>
    </item>
    
    <item>
      <title>Docker Swarm Proxy</title>
      <link>https://yrong.github.io/blog/2017/03/22/docker-swarm/</link>
      <pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate>
      <author>yrong@ustc.edu (Ronyang)</author>
      <guid>https://yrong.github.io/blog/2017/03/22/docker-swarm/</guid>
      <description>Integrating Proxy With Docker Swarm (Tour Around Docker 1.12 Series)  This article continues where Docker Swarm Introduction left. I will assume that you have at least a basic knowledge how Swarm in Docker v1.12+ works. If you don&amp;rsquo;t, please read the previous article first.
 The fact that we can deploy any number of services inside a Swarm cluster does not mean that they are accessible to our users.</description>
    </item>
    
  </channel>
</rss>