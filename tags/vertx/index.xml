<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vertx on yrong blog</title>
    <link>https://yrong.github.io/blog/tags/vertx/</link>
    <description>Recent content in Vertx on yrong blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>yrong@ustc.edu (Ronyang)</managingEditor>
    <webMaster>yrong@ustc.edu (Ronyang)</webMaster>
    <copyright>&amp;copy; Copyright 2017 Ronyang</copyright>
    <lastBuildDate>Sat, 18 Mar 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yrong.github.io/blog/tags/vertx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vertx Micro Shop</title>
      <link>https://yrong.github.io/blog/2017/03/18/vertx-blueprint/</link>
      <pubDate>Sat, 18 Mar 2017 00:00:00 +0000</pubDate>
      <author>yrong@ustc.edu (Ronyang)</author>
      <guid>https://yrong.github.io/blog/2017/03/18/vertx-blueprint/</guid>
      <description>Vert.x 蓝图 - Micro Shop 微服务应用 对应的Vert.x版本为 3.4.1 内容 利用 Vert.x 构建微服务应用 异步开发模式 函数式、响应式编程范式 事件溯源 (Event Sourcing) 通过分布式Event B</description>
    </item>
    
    <item>
      <title>vertx源码分析</title>
      <link>https://yrong.github.io/blog/2016/10/11/vertx-internal/</link>
      <pubDate>Tue, 11 Oct 2016 18:00:00 +0000</pubDate>
      <author>yrong@ustc.edu (Ronyang)</author>
      <guid>https://yrong.github.io/blog/2016/10/11/vertx-internal/</guid>
      <description>Cluster初始化 调用Vertx.clusteredVertx静态方法后，Vert.x会利用Vertx工厂方法创建Vertx实例。 @Override public void clusteredVertx(VertxOptions</description>
    </item>
    
    <item>
      <title>ACS CWMP协议基于异步开源框架vertx的实现</title>
      <link>https://yrong.github.io/blog/2016/07/13/tinyacs/</link>
      <pubDate>Wed, 13 Jul 2016 15:00:00 +0000</pubDate>
      <author>yrong@ustc.edu (Ronyang)</author>
      <guid>https://yrong.github.io/blog/2016/07/13/tinyacs/</guid>
      <description>ACS CWMP A blazing fast TR-069 auto configuration server (ACS) built with Vertx, Redis, and MongoDB. I&amp;rsquo;ve added the source code in github and welcome comments. Infrastructure and message flow for nbi request meteor stack send nbi request to acs nbi server by standard restful api and nbi server forward it to one cpe server by vertx eventbus api(eventbus send will choose one cpe server with round-robin algrithom) cpe server</description>
    </item>
    
  </channel>
</rss>